# Generated by Django 5.1.7 on 2025-10-25 08:54

import django.db.models.deletion
import django.db.models.functions.text
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Cycle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start", models.DateField()),
                ("end", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["start"],
            },
        ),
        migrations.CreateModel(
            name="Contributor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("address", models.CharField(max_length=58, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": [django.db.models.functions.text.Lower("name")],
                "constraints": [
                    models.UniqueConstraint(
                        models.F("name"),
                        django.db.models.functions.text.Lower("name"),
                        name="unique_contributor_name",
                    ),
                    models.UniqueConstraint(
                        models.F("address"), name="unique_contributor_address"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("wontfix", "Wontfix"),
                            ("addressed", "Addressed"),
                            ("archived", "Archived"),
                        ],
                        default="created",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-number"],
                "constraints": [
                    models.UniqueConstraint(
                        models.F("number"), name="unique_issue_number"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("github_token", models.CharField(blank=True, max_length=100)),
                (
                    "contributor",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.contributor",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RewardType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=5)),
                ("name", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
                "constraints": [
                    models.UniqueConstraint(
                        models.F("label"),
                        django.db.models.functions.text.Lower("label"),
                        name="unique_rewardtype_label",
                    ),
                    models.UniqueConstraint(
                        models.F("name"),
                        django.db.models.functions.text.Lower("name"),
                        name="unique_rewardtype_name",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Reward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.IntegerField(default=1)),
                ("amount", models.IntegerField(default=10000)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("general_description", models.TextField(blank=True)),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.rewardtype",
                    ),
                ),
            ],
            options={
                "ordering": ["type", "level"],
            },
        ),
        migrations.CreateModel(
            name="SocialPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("prefix", models.CharField(blank=True, max_length=2)),
            ],
            options={
                "ordering": [django.db.models.functions.text.Lower("name")],
                "constraints": [
                    models.UniqueConstraint(
                        models.F("name"),
                        django.db.models.functions.text.Lower("name"),
                        name="unique_socialplatform_name",
                    ),
                    models.UniqueConstraint(
                        models.F("prefix"), name="unique_socialplatform_prefix"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Handle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("handle", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contributor",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.contributor",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.socialplatform",
                    ),
                ),
            ],
            options={
                "ordering": [django.db.models.functions.text.Lower("handle")],
            },
        ),
        migrations.CreateModel(
            name="Contribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "percentage",
                    models.DecimalField(
                        decimal_places=2, default=1, max_digits=5, null=True
                    ),
                ),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
                ("comment", models.CharField(blank=True, max_length=255, null=True)),
                ("confirmed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "contributor",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.contributor",
                    ),
                ),
                (
                    "cycle",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.cycle",
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.issue",
                    ),
                ),
                (
                    "reward",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.reward",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.socialplatform",
                    ),
                ),
            ],
            options={
                "ordering": ["cycle", "created_at"],
            },
        ),
        migrations.AddConstraint(
            model_name="reward",
            constraint=models.UniqueConstraint(
                fields=("type", "level", "amount"),
                name="unique_reward_type_level_amount",
            ),
        ),
        migrations.AddConstraint(
            model_name="handle",
            constraint=models.UniqueConstraint(
                fields=("platform", "handle"), name="unique_social_handle"
            ),
        ),
    ]
